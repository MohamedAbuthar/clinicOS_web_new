rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isDoctor() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'doctor';
    }
    
    function isAssistant() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'assistant';
    }
    
    function isStaff() {
      return isAdmin() || isDoctor() || isAssistant();
    }
    
    function isPatient() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/patients/$(request.auth.uid));
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection (Admin, Doctor, Assistant profiles)
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated(); // Allow any authenticated user to create (for admin creating doctors/assistants)
      allow update: if isAuthenticated(); // Allow any authenticated user to update user profiles (for admin/assistant operations)
      allow delete: if isAdmin();
    }
    
    // Patients collection
    match /patients/{patientId} {
      allow read: if isStaff() || isOwner(patientId);
      allow create: if true; // Anyone can register as patient
      allow update: if isStaff() || isOwner(patientId);
      allow delete: if isAdmin();
    }
    
    // Doctors collection
    match /doctors/{doctorId} {
      allow read: if true; // Public - patients need to see doctors
      allow create: if isAuthenticated(); // Allow authenticated users to create (admin creating via secondary auth)
      allow update: if isAuthenticated(); // Allow any authenticated user to update doctors (for admin/assistant operations)
      allow delete: if isAdmin();
    }
    
    // Assistants collection
    match /assistants/{assistantId} {
      allow read: if isStaff();
      allow create: if isAuthenticated(); // Allow authenticated users to create (admin creating via secondary auth)
      allow update: if isAdmin() || isStaff(); // Allow all staff to update assistants
      allow delete: if isAdmin();
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isStaff() || 
                     (isPatient() && resource.data.patientId == request.auth.uid) ||
                     (isPatient());
      allow create: if isAuthenticated();
      allow update: if isStaff() || 
                       (isPatient() && resource.data.patientId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Queue collection
    match /queue/{queueId} {
      allow read: if isStaff() || 
                     (isPatient() && resource.data.patientId == request.auth.uid);
      allow create, update: if isStaff();
      allow delete: if isAdmin();
    }
    
    // Medical Records collection
    match /medicalRecords/{recordId} {
      allow read: if isStaff() || 
                     (isPatient() && resource.data.patientId == request.auth.uid);
      allow create, update: if isDoctor() || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Prescriptions collection
    match /prescriptions/{prescriptionId} {
      allow read: if isStaff() || 
                     (isPatient() && resource.data.patientId == request.auth.uid);
      allow create, update: if isDoctor() || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Vaccinations collection
    match /vaccinations/{vaccinationId} {
      allow read: if isStaff() || 
                     (isPatient() && resource.data.patientId == request.auth.uid);
      allow create, update: if isDoctor() || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read, update: if isAuthenticated() && 
                             resource.data.patientId == request.auth.uid;
      allow create: if isStaff();
      allow delete: if isAdmin() || 
                       (isPatient() && resource.data.patientId == request.auth.uid);
    }
    
    // Doctor Schedules collection
    match /doctorSchedules/{scheduleId} {
      allow read: if true; // Public - patients need to see schedules
      allow create, update, delete: if isAdmin();
    }
    
    // Schedule Overrides collection
    match /scheduleOverrides/{overrideId} {
      allow read: if true; // Public - patients need to see availability
      allow create, update, delete: if isAdmin();
    }
    
    // Audit Logs collection
    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false; // Audit logs are immutable
    }
  }
}

